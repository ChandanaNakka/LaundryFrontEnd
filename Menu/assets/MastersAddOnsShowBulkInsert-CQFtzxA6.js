import"./style-CWPg30Uh.js";import"./EntryFile-BS4wfFeh.js";import"./EntryFile-B8x209MB.js";import"./EntryFile-B5fBQVjD.js";import{S as j}from"./EntryFile-0QZuJqKI.js";let u=async()=>{document.getElementById("RefreshBSTableId").click()},b=({inData:t})=>{let a=t;var e=$("#table");e.bootstrapTable("load",a)},L=({inData:t})=>{let e=t.split(`\r
`);var l=$("#table");let r=l.bootstrapTable("getVisibleColumns").map(c=>c.field);console.log("jVarLocalColumnNames : ",r);let n=e.map(c=>{let s={};return c.split("	").forEach((m,i)=>{console.log("LoopIndex : ",i,r[1]),s[r[i]]=m}),s});console.log("jVarLocalCollection : ",n);var l=$("#table");l.bootstrapTable("load",n)},p=t=>{const a=t.target.files[0],e=new FileReader;e.onload=()=>{if(a.type==="text/plain"&&L({inData:e.result}),a.type==="application/json"){const o=JSON.parse(e.result);b({inData:o})}},e.readAsText(a)},F=()=>{document.getElementById("formFile").addEventListener("change",p)},V=()=>{F()};const S={"data-toolbar":"#toolbar","data-search":"true","data-searchable":"true","data-show-columns":"true","data-show-columns-toggle-all":"true","data-click-to-select":"true","data-filter-control":"true","data-show-export":"true","data-id-field":"pk","data-show-toggle":"true"},h={tableAttributes:S},f=()=>{var t=$("#table");t.attr(h.tableAttributes)},g=()=>{f(),I().then()},I=async()=>{var t=$("#table");t.bootstrapTable({data:[]})},y=()=>{w(),T()},w=()=>{d({inGetKey:"FromSave"})===null&&bootstrap.Alert.getOrCreateInstance("#FromSaveId").close()};let T=()=>{let t=d({inGetKey:"Records"}),e=document.getElementById("RecordsCountId");e!==null&&(e.innerHTML=t)},d=({inGetKey:t})=>{const a=window.location.search;return new URLSearchParams(a).get(t)};const v=()=>{y(),g(),V()},C="binSecured",B={routePath:C};let R=async({inBodyData:t})=>{let a=jVarGlobalTableName,e=B.routePath,o=t,r=`/${e}/${a}/MultiInsertWithCheck`,n={method:"POST",headers:{Accept:"application/json","Content-Type":"application/json"},body:JSON.stringify(o)},l=await fetch(r,n);return console.log("response::",l),l};const A=()=>{var t=$("#table");return t.bootstrapTable("getData")};let D=async({inFromFetch:t,inBodyData:a})=>{if(t.status===200){const e=await t.json();return P({inBodyData:a}),await e}else swal.fire({icon:"error",title:"Duplicate"})},P=({inBodyData:t})=>{const a=new URL(window.location.href);a.searchParams.append("FromSave",!0),a.searchParams.append("Records",t.length),window.location.href=a.href},H=async()=>{{let t=await A(),a=await R({inBodyData:t});await D({inFromFetch:a,inBodyData:t})}};const E=()=>{let a=document.getElementById("remove");a!==null&&a.addEventListener("click",H)},N=()=>{E()},O=()=>{j({inSuccessFunc:u})&&(v(),u().then(()=>{N()}))};O();
