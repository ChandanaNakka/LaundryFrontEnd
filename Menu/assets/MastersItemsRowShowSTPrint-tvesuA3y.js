import"./style-CWPg30Uh.js";import"./EntryFile-BS4wfFeh.js";const u="bin",d={GetUrl:u},m=async()=>{let a=L({inGetKey:"inRowPk"});return a===null?(alert("need inRowPk in URL "),await!1):await await(await fetch(`/${d.GetUrl}/${jVarGlobalTableName}/${a}`)).json()};let L=({inGetKey:a})=>{const e=window.location.search;return new URLSearchParams(e).get(a)};const j=async()=>await m(),h="HeadRowId",b=async()=>{let a=await j();return a===!1?await!1:(V({inDataAsObject:a}),w(),a)},V=({inDataAsObject:a})=>{document.getElementById(h).querySelectorAll("input").forEach(t=>{t.name in a&&(t.value=a[t.name])})},w=()=>{document.getElementById("BsSubTableRefreshId").click()},f="bin",S={PostUrl:f};let y=async()=>{let a=S.PostUrl,e=jVarGlobalSubTableName,l=R({inGetKey:"inRowPk"}),t=`/${a}/${e}/FilterData/RefPK/${l}`;return await await fetch(t)},R=({inGetKey:a})=>{const e=window.location.search;return new URLSearchParams(e).get(a)},I=({inData:a})=>{let e=jVarGlobalSubTableTagId,r=[...document.getElementById(`${e}`).querySelectorAll("thead th")].map(n=>n.dataset.field);g({inData:a,inColumnKeys:r,inTableId:e})},g=({inData:a,inColumnKeys:e,inTableId:l})=>{let t=l,r=document.getElementById(`${t}`),n=e;a.forEach(c=>{let s=r.insertRow(-1);for(var o=0;o<n.length;o++){var i=s.insertCell(-1);i.innerHTML=c[n[o]]}})},T=async()=>{{let a=await y();if(a.status===200){let e=await a.json();e&&I({inData:e})}}},$=()=>{let a=document.getElementById("BsSubTableRefreshId");a!==null&&a.addEventListener("click",T)},F=()=>{$()};const P=async()=>{b().then(),F()},p=()=>{P()};p();
